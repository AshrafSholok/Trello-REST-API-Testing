{
	"info": {
		"_postman_id": "17d3e705-dcfe-4bde-b874-f9b0b74559e8",
		"name": "Trello APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23053272"
	},
	"item": [
		{
			"name": "Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false); // Check closed=false\r",
							"});\r",
							"pm.test(\"The permissionLevel should be private\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"permissionLevel\");\r",
							"});\r",
							"pm.test(\"can be public is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.canBePublic).to.eql(true); // Check closed=false\r",
							"});\r",
							"\r",
							"pm.test(\"can invite is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.canInvite).to.eql(true); // Check closed=false\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Ashraf Mohamed\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=TrelloRestAPIs&key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TrelloRestAPIs"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status Code Should be equal to 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var boardsL = jsonData.boards.length;\r",
							"\r",
							"pm.test(\"Number of boards should be more than 1\", function () {\r",
							"    pm.expect(boardsL).to.be.above(1);\r",
							"});\r",
							"pm.environment.set(\"FirstBoardID\", jsonData.boards[0].id);\r",
							"pm.environment.set(\"LastBoardID\", jsonData.boards[boardsL-1].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/me?boards=open&key={{key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"me"
					],
					"query": [
						{
							"key": "boards",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"ID key\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"pm.test(\"name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"idBoard\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"idBoard\");\r",
							"});\r",
							"pm.test(\"closed parameter\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\" limits are empty object\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.limits).to.be.empty;\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?name=new added List&idBoard={{idBoardNum}}&key={{key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "new added List"
						},
						{
							"key": "idBoard",
							"value": "{{idBoardNum}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Board Lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var listL = jsonData.length;\r",
							"pm.test(\"Number of list is four lists\", function () {\r",
							"    pm.expect(jsonData.length).to.eql(4);\r",
							"});\r",
							"pm.environment.set(\"FirstListID\", jsonData[0].id);\r",
							"pm.environment.set(\"LastListID\", jsonData[listL-1].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{idBoardNum}}/lists?key={{key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{idBoardNum}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"the value of closed is true\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Set-cookie at the header's response \", function () {\r",
							"    var cookies_header = pm.response.headers.get(\"Set-Cookie\");\r",
							"\r",
							"\r",
							"    pm.expect(cookies_header).contains(\"isEnterpriseAdmin%3Dfalse\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{FirstListID}}/closed?key={{key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{FirstListID}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Board is deleted successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData._value).to.contain(\"board is removed successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/6324ce05c4ccc9003043b7e5?key={{key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"6324ce05c4ccc9003043b7e5"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}